[
	{ "keys": ["super+alt+shift+a"], "command": "alignment" },
	{ "keys": ["super+alt+ctrl+a"], "command": "alignment" },

	{ "keys": ["ctrl+shift+c"], "command": "convert_to_utf8" },
	{ "keys": ["super+shift+alt+u"], "command": "UrlQuoteSelection" },

    //{ "keys": ["super+."], "command": "spaces-to-tabs" },

	// A macro command created by Zander Martineau
	{ "keys": ["super+shift+alt+s"], "command": "run_macro_file", "args": {"file": "Packages/User/Spaces to Tabs.sublime-macro"} },

	{ "keys": ["shift+escape"], "command": "alternative_autocomplete", "context":
		[
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "overlay_visible", "operator": "equal", "operand": false }
		]
	},

	// Large comment block shortcut
	{ "keys": ["ctrl+shift+b"], "command": "insert_snippet", "args": {"contents": "${TM_COMMENT_START/s*$//}====${1/./=/g}====${TM_COMMENT_END/^s*(.+)/ $1/}\n${TM_COMMENT_START/s*$//}=== ${1:Banner} ===${TM_COMMENT_END/^s*(.+)/ $1/}\n${TM_COMMENT_START/s*$//}====${1/./=/g}====${TM_COMMENT_END/^s*(.+)/ $1/}"}},

	// Medium comment block shortcut
	{ "keys": ["ctrl+shift+c"], "command": "insert_snippet", "args": {"contents": "${TM_COMMENT_START/s*$//}=== ${1:Banner} ===${TM_COMMENT_END/^s*(.+)/ $1/}\n${TM_COMMENT_START/s*$//}====${1/./=/g}====${TM_COMMENT_END/^s*(.+)/ $1/}"}},

	// Small comment block shortcut
	{ "keys": ["ctrl+shift+x"], "command": "insert_snippet", "args": {"contents": "${TM_COMMENT_START/s*$//}=== ${1:Banner} ===${TM_COMMENT_END/^s*(.+)/ $1/}"}},

	// Can I Use
	{ "keys": ["ctrl+alt+f"], "command": "use_it" },
	// Highlight Changes
	{ "keys": ["super+k", "super+d"], "command": "highlightchanges" },
	{ "keys": ["super+k", "super+l"], "command": "gotonextdiff " },
	//JS Format
	{ "keys": ["ctrl+shift+f"], "command": "js_format"},
	//Mark and move
	// { "keys": ["alt+shift+tab"], "command": "mark_and_move_window_select" },
	// { "keys": ["alt+tab"], "command": "mark_and_move_window_toggle" },
	// { "keys": ["ctrl+m"], "command": "mark_and_move_do_it_all" },
	// { "keys": ["alt+m"], "command": "mark_and_move_next" },
	// { "keys": ["alt+shift+m"], "command": "mark_and_move_prev" },
	// { "keys": ["ctrl+shift+m"], "command": "mark_and_move_recall" },
	// { "keys": ["ctrl+alt+m"], "command": "mark_and_move_clear" },
	// Move Text
	{ "keys": ["super+ctrl+left"], "command": "move_text_left" },
	{ "keys": ["super+ctrl+right"], "command": "move_text_right" }

	// =================
	// === ZENCODING ===
	// =================
	// ,{
	// 	"keys": [
	// 		"#"
	// 	],
	// 	"args": {
	// 		"contents": " id=\"$1\""
	// 	},
	// 	"command": "insert_snippet",
	// 	"context": [
	// 		{
	// 			"operand": "text.html meta.tag -string -punctuation.definition.tag.begin.html -meta.scope.between-tag-pair.html -punctuation.definition.tag.html -source -meta.tag.template.value.twig",
	// 			"operator": "equal",
	// 			"match_all": true,
	// 			"key": "selector"
	// 		},
	// 		{"operand": true, "operator": "equal", "key": "setting.auto_id_class"}
	// 	]
	// },
	// {
	// 	"keys": [
	// 		"."
	// 	],
	// 	"args": {
	// 		"contents": " class=\"$1\""
	// 	},
	// 	"command": "insert_snippet",
	// 	"context": [
	// 		{
	// 			"key": "selector",
	// 			"operand": "text.html meta.tag -string -punctuation.definition.tag.begin.html -meta.scope.between-tag-pair.html -punctuation.definition.tag.html -source -meta.tag.template.value.twig",
	// 			"operator": "equal",
	// 			"match_all": true
	// 		},
	// 		{"operand": true, "operator": "equal", "key": "setting.auto_id_class"}
	// 	]
	// },
	// {
	// 	"keys": [
	// 		"#"
	// 	],
	// 	"args": {
	// 		"contents": "id=\"$1\""
	// 	},
	// 	"command": "insert_snippet",
	// 	"context": [
	// 		{
	// 			"operand": "text.html meta.tag -string -punctuation.definition.tag.begin.html -meta.scope.between-tag-pair.html -punctuation.definition.tag.html -source -meta.tag.template.value.twig",
	// 			"operator": "equal",
	// 			"match_all": true,
	// 			"key": "selector"
	// 		},
	// 		{
	// 			"operand": "\\s$",
	// 			"operator": "regex_contains",
	// 			"match_all": true,
	// 			"key": "preceding_text"
	// 		},
	// 		{"operand": true, "operator": "equal", "key": "setting.auto_id_class"}
	// 	]
	// },
	// {
	// 	"keys": [
	// 		"."
	// 	],
	// 	"args": {
	// 		"contents": "class=\"$1\""
	// 	},
	// 	"command": "insert_snippet",
	// 	"context": [
	// 		{
	// 			"operand": "text.html meta.tag -string -punctuation.definition.tag.begin.html -meta.scope.between-tag-pair.html -punctuation.definition.tag.html -source -meta.tag.template.value.twig",
	// 			"operator": "equal",
	// 			"match_all": true,
	// 			"key": "selector"
	// 		},
	// 		{
	// 			"operand": "\\s$",
	// 			"operator": "regex_contains",
	// 			"match_all": true,
	// 			"key": "preceding_text"
	// 		},
	// 		{"operand": true, "operator": "equal", "key": "setting.auto_id_class"}
	// 	]
	// }

]
